import java.util.*;

public class PriorityQueueDemo<T extends Comparable<T>>{
    private PriorityQueue<T> queue;
    
    public PriorityQueueDemo(){
        queue=new PriorityQueue<>(Collections.reverseOrder());
    }
    
    public void enqueue(T element){
        queue.add(element);
    }
    
    public T dequeue(){
        return queue.poll();
    }

    public T peek(){
        return queue.peek();
    }
    
    public boolean isEmpty(){
        return queue.isEmpty();
    }
    public static void main(String[] args){
        PriorityQueueDemo<Integer> pq=new PriorityQueueDemo<>();
        pq.enqueue(5);
        pq.enqueue(7);
        pq.enqueue(1);
        while(!pq.isEmpty())
            System.out.println(pq.dequeue());
    }
}
