package Kmp17;
import java.util.*;

public class KMP{
    
    public static int[] lpstable(String pattern){
        int m=pattern.length();
        int[] lps=new int[m];
        int i=0;
        int j=1;
        lps[0]=0;
        while(j<m){
            if(pattern.charAt(i)==pattern.charAt(j)){
                lps[j]=i+1;
                i++;
                j++;
            }
            else{
                if(i==0){
                    lps[j]=0;
                    j++;
                }
                else
                    i=lps[i-1];
            }
        }
        return lps;
    }

    public static int find(String text, String pattern) {
        int n = text.length();
        int m = pattern.length();
        int lps[] = lpstable(pattern);
        int i = 0, j = 0;
    
        while (i < n) {
            if (text.charAt(i) == pattern.charAt(j)) {
                if (j == m - 1)
                    return i - m + 1;
                i++;
                j++;
            } else if (j > 0) {
                j = lps[j - 1];
            } else {
                i++;
            }
        }
        return -1;
    }
    
    
    public static void main(String[] args){
        Scanner sc=new Scanner(System.in);

        System.out.println("Enter text:");
        String text=sc.nextLine().toLowerCase();
        System.out.println("Enter pattern:");
        String pattern=sc.nextLine().toLowerCase();
        int res=find(text,pattern);
        if(res>=0)
            System.out.println("Pattern found at index: "+res);
        else 
            System.out.println("Pattern not found");

        sc.close();
    }
}
